{"version":3,"file":"index.js","sources":["../../../../src/components/Button/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  PolymorphicComponentPropsWithRef,\n  PolymorphicRef,\n} from '../../polymorphic-component-types';\nimport { ColorValue, MarginProps } from '../Box';\nimport Text from '../Text';\nimport { Breakpoints, mapBreakpointValues } from '../../breakpoints';\nimport styles from './Button.module.scss';\nimport clsx from 'clsx';\n\ntype Variant = 'brand-primary' | 'brand-secondary' | 'default-primary' | 'default-secondary';\n\nexport interface Props extends MarginProps {\n  children: React.ReactNode;\n  variant?: Variant | Breakpoints<Variant>;\n}\n\nexport type ButtonProps<C extends React.ElementType> = PolymorphicComponentPropsWithRef<C, Props>;\n\ntype ButtonComponent = <C extends React.ElementType = 'button'>(\n  props: ButtonProps<C>,\n) => React.ReactElement<ButtonProps<C>> | null;\n\nfunction getVariantClasses(value?: Variant | Breakpoints<Variant>) {\n  if (typeof value === 'string') {\n    return styles[`${value}`];\n  }\n\n  if (value && typeof value === 'object') {\n    return [\n      value.sm && styles[`${value.sm}-sm`],\n      value.md && styles[`${value.md}-md`],\n      value.lg && styles[`${value.lg}-lg`],\n    ];\n  }\n\n  return undefined;\n}\n\nconst Button: ButtonComponent = forwardRef(function Button<C extends React.ElementType = 'button'>(\n  { as, children, variant = 'brand-primary', ...rest }: ButtonProps<C>,\n  ref?: PolymorphicRef<C>,\n) {\n  const asComponent: React.ElementType = as || 'button';\n\n  const className = clsx(\n    rest.className,\n    styles.button,\n    styles.inheritfont,\n    getVariantClasses(variant),\n  );\n\n  const backgroundColor = mapBreakpointValues<Variant, ColorValue>(variant, (variant) => {\n    if (rest.disabled) return 'neutral-200';\n    switch (variant) {\n      case 'default-primary':\n        return 'neutral-black';\n      case 'default-secondary':\n        return 'neutral-white';\n      case 'brand-primary':\n        return 'active-800';\n      case 'brand-secondary':\n        return 'neutral-white';\n      default:\n        return 'neutral-black';\n    }\n  });\n  const borderColor = mapBreakpointValues<Variant, ColorValue>(variant, (variant) => {\n    if (rest.disabled) return 'neutral-200';\n    switch (variant) {\n      case 'brand-secondary':\n        return 'active-800';\n      case 'default-primary':\n      case 'default-secondary':\n      case 'brand-primary':\n      default:\n        return 'neutral-black';\n    }\n  });\n  const textColor = mapBreakpointValues<Variant, ColorValue>(variant, (variant) => {\n    if (rest.disabled) return 'neutral-400';\n    switch (variant) {\n      case 'default-primary':\n        return 'neutral-white';\n      case 'default-secondary':\n        return 'neutral-black';\n      case 'brand-primary':\n        return 'neutral-white';\n      case 'brand-secondary':\n        return 'neutral-black';\n      default:\n        return 'neutral-white';\n    }\n  });\n\n  return (\n    <Text\n      as={asComponent}\n      className={className}\n      backgroundColor={backgroundColor}\n      borderColor={borderColor}\n      color={textColor}\n      paddingX={200}\n      variant=\"button-md-emphasis\"\n      ref={ref}\n      {...rest}\n    >\n      {children}\n    </Text>\n  );\n});\n\nexport default Button as typeof Button;\n"],"names":["getVariantClasses","value","styles","sm","md","lg","undefined","Button","forwardRef","_a","ref","as","children","variant","rest","__rest","asComponent","className","clsx","button","inheritfont","backgroundColor","mapBreakpointValues","disabled","borderColor","textColor","React","createElement","Text","_extends","color","paddingX"],"mappings":"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"}